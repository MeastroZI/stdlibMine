/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var Linter = require( 'eslint' ).Linter;
var rule = require( './../lib' );

var linter = new Linter();

// Valid example with empty line after require:
var valid = [
	'/**',
	'* Fréchet distribution constructor.',
	'*',
	'* @example',
	'* var Frechet = require( \'@stdlib/stats/base/dists/frechet/ctor\' );',
	'*',
	'* var frechet = new Frechet( 1.0, 1.0, 0.5 );',
	'*',
	'* var y = frechet.cdf( 0.8 );',
	'* // returns ~0.036',
	'*/',
	'function Frechet() {}'
].join( '\n' );

// Invalid example without empty line after require:
var invalid = [
	'/**',
	'* Fréchet distribution constructor.',
	'*',
	'* @example',
	'* var Frechet = require( \'@stdlib/stats/base/dists/frechet/ctor\' );',
	'* var frechet = new Frechet( 1.0, 1.0, 0.5 );',
	'*',
	'* var y = frechet.cdf( 0.8 );',
	'* // returns ~0.036',
	'*/',
	'function Frechet() {}'
].join( '\n' );

// Register the rule:
linter.defineRule( 'jsdoc-example-require-spacing', rule );

// Lint the valid example:
var validResult = linter.verify( valid, {
	'rules': {
		'jsdoc-example-require-spacing': 'error'
	}
});
console.log( 'Valid example - Number of errors: %d', validResult.length );

// Lint the invalid example:
var invalidResult = linter.verify( invalid, {
	'rules': {
		'jsdoc-example-require-spacing': 'error'
	}
});
console.log( 'Invalid example - Number of errors: %d', invalidResult.length );
console.log( 'Error message: %s', invalidResult[ 0 ].message );
